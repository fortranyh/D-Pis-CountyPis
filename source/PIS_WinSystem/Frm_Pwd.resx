<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByc8AAYeLQkGLko4BSxIRwguSkYILkpGBSxIRwUu
        STcFHi4KAAAABwAAAAwAAAAMAAAACwAAAAUAAAAAAAAAABBfkwAKTHgfIIS9yySSzOwVhsLqFYbD6iWT
        zewihr7KCUt3Iydhkl0rbJ6dLW2dnSxrnJoiU39LAAAABAAAAAASaaEAClOGJDGe1+Ysrur/EYvE/w+I
        v/8ur+r/OqTa5AdQhClAib+QcsHn/2DE7f9SteP/NHuyzCFQekoAAAAEFnSyAApYjiQ9pdrmK67q/wlv
        of8HZ5b/Lq3o/0ms3uQGVYwpK2+rMWek0cGK0fD/Zsvy/1a55f82fbPMJVeDRj/K/wAKYp8iTa/h5VTA
        7P9Lr9j/Sq3W/1XA7P9TsuLjCF+eJma48wAhZ6ctZ6TRw4zR8P9qzfP/WLnm/zBvo6IPJT85CDdeKFSO
        s7JtnLj2QZjKk0GYypNtnbn2WZO4rQBdpwwIQ30Aabf0ACRpqC5ppdHDjtLw/2rL8f9Rp9f2RpnK6jV9
        rJ+AenieqZ+Z8mNaVWNiWlVjqKCb9J2VkIH06OAAAAAAAAhEfgBsufQAJWqoLmqm0sOQ1PH/cNH1/2TI
        8P9Rsd74dKK93be3tvq2sq/yt7Ow87SwruGOi4g9rammAAAAAAAAAAAACUV+AG+79gAnbKkubKfSw5HU
        8f9y0vb/Zcjv/3vQ9P+t2On/uc/U/7TL1P98orvHFDlZKgAAAAEAAAAAAAAAAAAAAAALR38AbLTuACps
        qC5kpNDJcMvx/3vX+f+V4P3/k9/8/3vV+f941vz/YL7q/zyCsqATJj4RAAAAAAAAAAAAAAAAAAAAAAMU
        JQD///8AOH6zhm/H7/+Y4v7/ftf6/2nK8v9ry/T/a8/4/2bN+P9NotTgKVWCJwAAAAAAAAAAAAAAAAAA
        AAAAAAAAx///AEOHuoiC1PX/kt77/2jJ8v9ds+DnS5fKqFex4edjy/f/Vqvb5ChYhikAAAAAAAAAAAAA
        AAAAAAAAAAAAALf//wBOi7yDidT0/3HR9/9qyvT/Roy8tAwbNDJBi7y0Ysb0/2uw2+AkWo0lAAAAAAAA
        AAAAAAAAAAAAAAAAAABnr+cARYGzTIjE5vB/2Pv/aM34/1St3Ow8hLS8Tqrb7H3M8/9rpM6lDEh+CwAA
        AAAAAAAAAAAAAAAAAAAAAAAAMHKoAApPiglknsqTl8/s+4rY+f940vj/ds31/4rR8/9+ttvTRIO4N1OQ
        wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5fLUAKnCsFlmXxoeAt9zpiL/h/4W83/txqNK4RIS6PgAA
        AAAeYp0A/wAAAAMAAAABAAAAAQAAAAEAAACAAAAAwAEAAOABAADwAAAA+AAAAPwAAAD8AAAA/AAAAPwA
        AAD8AQAA/gEAAA==
</value>
  </data>
</root>